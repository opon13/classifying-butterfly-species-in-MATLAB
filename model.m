trainingSetup = load("params_2023_01_02__20_41_08.mat"); % remember to set correctly the working folder
imdsTrain = trainingSetup.imdsTrain;
imdsValidation = trainingSetup.imdsValidation;

% Resize the images to match the network input layer.
augimdsTrain = augmentedImageDatastore([224 224 3],imdsTrain);
augimdsValidation = augmentedImageDatastore([224 224 3],imdsValidation);

opts = trainingOptions("sgdm",...
    "ExecutionEnvironment","auto",...
    "InitialLearnRate",0.01,...
    "MaxEpochs",20,...
    "MiniBatchSize",64,...
    "Shuffle","every-epoch",...
    "ValidationFrequency",70,...
    "Plots","training-progress",...
    "ValidationData",augimdsValidation);

network_architecture; % save the model structure into lgraph variable

[net, traininfo] = trainNetwork(augimdsTrain,lgraph,opts);